# Build and Push any master commit to the Staging environment. Can be manually run to build and push any to commit to either env.
trigger:
  branches:
    include:
      - master
  tags:
    include:
      - '*'

parameters:
- name: AzureEnvironment
  default: staging
  values:
    - staging
    - production

variables:
  ${{ if eq( parameters.AzureEnvironment, 'production' ) }}: 
    serviceConnection: "afdatahub-cnx-p"
    imagePath: "afdatahubpacr.azurecr.io/who-afro-ckan"
    repository: afdatahubpacr
  ${{ else }}: 
    serviceConnection: "afdatahub-cnx-t"
    imagePath: "afdatahubtacr.azurecr.io/who-afro-ckan"
    repository: afdatahubtacr

pool:
  vmImage: ubuntu-latest

resources:
  repositories:
  - repository: ckan   #An ID to reference this resource
    type: github
    name: ckan/ckan
    endpoint: PublicRepoRead
  - repository: ckannext-who-afro   #An ID to reference this resource
    type: github
    name: fjelltopp/ckanext-who-afro
    endpoint: PublicRepoRead

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: 'Build and push'
    steps:
      - checkout: self
        fetchTags: true
        submodules: false

      - script: git submodule update --init --recursive

      - task: Bash@3
        displayName: Set GIT revisions
        inputs:
          targetType: 'inline'
          script: |
            # Get the short commit hash and any tag
            echo "##vso[task.setvariable variable=commit]$(git rev-parse --short HEAD)"
            echo "##vso[task.setvariable variable=tag]$(git describe --tags --exact-match $(Build.SourceVersion) || '')"

      - task: Docker@2
        displayName: 'Build Docker'
        inputs:
          command: 'build'
          repository: '$(imagePath)'
          dockerfile: 'Dockerfile'
          tags: |
            $(commit)
            
      - task: AzureCLI@2
        displayName: 'Push to repository'
        inputs:
          addSpnToEnvironment: true
          azureSubscription: $(serviceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az acr login --name $(repository)

            docker push $(imagePath):$(commit)

            # If the commit is the latest, push the "latest" tag
            if [ "$(Build.SourceBranchName)" == "master" ]; then
              docker tag $(imagePath):$(commit) $(imagePath):latest
              docker push $(imagePath):latest
            fi
            
            # if tag is not empty, push the tag
            if [ -n "$(tag)" ]; then
              docker tag $(imagePath):$(commit) $(imagePath):$(tag)
              docker push $(imagePath):$(tag)
            fi
